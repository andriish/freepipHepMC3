name: CMake Build Matrix

on: [push, pull_request]



jobs:
#  manulinuxdocker:
#    name: "Manulinux2010"
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#    steps:
#    - uses: actions/checkout@v2
#    - name: Build
#      uses: ./.github/workflows/manulinux2010_x86_64

  #nativegithub:
    #name: "${{ matrix.config.name }} ${{ matrix.python-version }}"
    #runs-on: ${{ matrix.config.os }}
    #strategy:
      #fail-fast: false
      #matrix:
        #python-version: ["2.7"]
        #config:
        #- {
            #name: "Windows Latest MSVC",
            #os: windows-latest,
            #cc: "cl", cxx: "cl",
            #environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          #}
##        - {
##            name: "macOS macos-10.15 Clang",
##            os: macos-10.15,
##            cc: "clang", cxx: "clang++"
##          }
##        - {
##            name: "macOS macos-11.0 Clang",
##            os: macos-11,
##            cc: "clang", cxx: "clang++"
##          }
    #steps:
    #- uses: actions/checkout@v2
    
    #- name: Set up Python
      #uses: actions/setup-python@v2
      #with:
          #python-version: "${{ matrix.python-version }}"

    #- name: Install dependencies
      #run:  python -m pip install --upgrade pip twine wheel six  requests

    #- name: Build
      #run:  python do.py  3.2.5 master 1  auto no tempbuilddir2
  mingw:
    name: "windows-latest  ${{ matrix.sys }}"
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { sys: mingw64, env: x86_64 }
          - { sys: mingw32, env: i686 }
    steps:
    # Force version because of https://github.com/msys2/setup-msys2/issues/167
    - uses: msys2/setup-msys2@v2.4.2
      with:
        msystem: ${{matrix.sys}}
        install: >-
          git
          mingw-w64-${{matrix.env}}-gcc
          mingw-w64-${{matrix.env}}-ninja
          mingw-w64-${{matrix.env}}-python-pip
          mingw-w64-${{matrix.env}}-cmake
          mingw-w64-${{matrix.env}}-make
    - uses: actions/checkout@v2
    - name: Install dependencies
      run:  python -m pip install --upgrade pip twine wheel six  requests

    - name: Build
      run:  python do.py  3.2.5 mingw 1  auto no tempbuilddir2




  #nativegithubIntel:
    #name: "${{ matrix.config.name }} ${{ matrix.python-version }}"
    #runs-on: ${{ matrix.config.os }}
    #strategy:
      #fail-fast: false
      #matrix:
        #python-version: ["3.8"]
        #config:
        #- {
            #name: "Windows Latest MSVC",
            #os: windows-latest,
            #cc: "icc", cxx: "icpc", fc: "ifort"
          #}
##        - {
##            name: "macOS macos-10.15 Clang",
##            os: macos-10.15,
##            cc: "clang", cxx: "clang++"
##          }
##        - {
##            name: "macOS macos-11.0 Clang",
##            os: macos-11,
##            cc: "clang", cxx: "clang++"
##          }
    #steps:
    #- uses: actions/checkout@v2
    
    #- name: Set up Python
      #uses: actions/setup-python@v2
      #with:
          #python-version: "${{ matrix.python-version }}"

    #- name: Install dependencies
      #run:  python -m pip install --upgrade pip twine wheel six  requests tbb tbb-devel intel-fortran-rt dpcpp-cpp-rt intel-opencl-rt

    #- name: Build
      #run:  |
        #pip list -v
        #dir "C:/Program Files (x86)/"
        #dir c:\hostedtoolcache\windows\python\3.8.10\x64\lib\site-packages
        #dir c:\hostedtoolcache\windows\python\3.8.10\x64\lib\site-packages\intel_fortran_rt-2022.0.0.dist-info
        #"C:/Program Files (x86)/Intel/oneAPI/setvars.bat"
        #python do.py  3.2.5 master 1  auto no tempbuilddir2

#        type "C:\Program Files (x86)\Intel\oneAPI\setvars.bat"

  #nativegithubMINGW:
    #strategy:
      #matrix:
        #platform: [x86, x64]
        #hardlinks: [0, 1]
    #runs-on: windows-latest
    #name: 'Cygwin: ${{ matrix.platform }} / hardlinks${{ matrix.hardlinks }}'
    #defaults:
      #run:
        #shell: pwsh
    #steps:
    #- uses: actions/checkout@v2
    #- name: Install Cygwin
      #uses: egor-tensin/setup-cygwin@v3
    #- name: Set up MinGW
      #id: setup
      #uses: ./
      #with:
          #platform: '${{ matrix.platform }}'
          #cygwin: 1
          #cc: 1
          #hardlinks: '${{ matrix.hardlinks }}'
    
##    - name: Set up Python
##      uses: actions/setup-python@v2
##      with:
##          python-version: "${{ matrix.python-version }}"

    #- name: Install dependencies
      #run:  python -m pip install --upgrade pip twine wheel six  requests

    #- name: Build
      #run:  python do.py  3.2.5 windows 1  auto no tempbuilddir2


